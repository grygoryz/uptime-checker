version: '3'

dotenv: ['.env']

tasks:
  default:
    desc: Lists available commands
    cmds:
      - task: list

  list:
    desc: Lists available commands
    cmds:
      - task -l

  services:run:
    desc: Runs docker-compose services
    cmds:
      - docker-compose up -d

  services:stop:
    desc: Stops docker-compose services
    cmds:
      - docker-compose stop

  run:
    desc: Runs the server
    cmds:
      - task: swagger
      - go run cmd/server/main.go

  test:run:
    desc: Run test
    dotenv: ['.env.test']
    cmds:
      - docker-compose -f ./docker-compose.test.yml down --volumes
      - docker-compose -f ./docker-compose.test.yml up -d
      - sh -ec 'until (pg_isready -h localhost -p "$DB_PORT" -U "$DB_USER"); do sleep 1; done'
      - migrate -path database/migrations -database pgx://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME up
      - go test -v ./internal/...
      - docker-compose -f ./docker-compose.test.yml down --volumes

  migrate:create:
    desc: Creates .sql migration files (Up and Down). Set name by appending with 'NAME=name_of_file'
    cmds:
      - migrate create -ext sql -dir database/migrations -format unix "{{.NAME}}"

  migrate:
    desc: Migrates UP the database
    cmds:
      - migrate -path database/migrations -database pgx://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME up

  migrate:step:
    desc: Migrates UP the database by 'n' step(s)
    cmds:
      - migrate -path database/migrations -database pgx://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME up "{{.n}}"

  migrate:rollback:
    desc: Rollback the database by 'n' step(s)
    cmds:
      - migrate -path database/migrations -database pgx://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME down "{{.n}}"

  swagger:
    desc: Generates Swagger page for API reference
    cmds:
      - swag init -g cmd/server/main.go

  install:tools:
    desc: Install all necessary tools
    cmds:
      - task: install:migrate
      - task: install:swagger

  install:migrate:
    desc: Install golang migration tool
    cmds:
      - curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
      - mkdir -p ~/.local/bin
      - mv migrate ~/.local/bin/migrate

  install:swagger:
    desc: Install swagger cli
    cmds:
      - go install github.com/swaggo/swag/cmd/swag@latest
